---
import type { GetStaticPaths } from "astro";
import FilesLister from "@/components/files_lister.astro"
import Baselayout from "@/layouts/Baselayout.astro"
import { db } from "astro:db";
import { PYQs } from "astro:db";
import { and } from "astro:db";
import { eq } from "astro:db";
import type { ExplorerItem } from "@/types";
import ExplorerLayout from "@/layouts/ExplorerLayout.astro";

export const getStaticPaths = (async () => {
  const res = await db.selectDistinct({college_name: PYQs.college_short_name ,couse_name: PYQs.course_name, semester: PYQs.semester}).from(PYQs)
  
  return res.map(item=> ({ params: { college: item.college_name, course: item.couse_name.replaceAll(" ", "_"), semester: item.semester } }) );
}) satisfies GetStaticPaths;


const {college, course, semester } = Astro.params

const res = await db.selectDistinct({subject: PYQs.subject_short_name}).from(PYQs).where(and(eq(PYQs.college_short_name, college), eq(PYQs.course_name, course.replaceAll("_", " ")), eq(PYQs.semester, semester) ))

const subjects: ExplorerItem[] = res.map(item => ( { label: item.subject, link: item.subject, type: "folder" } ) ) 

const base_url = import.meta.env.BASE_URL
const breadcrumb_items = [
  {label: "Home", link: `${base_url}/`},
  {label: "PYQ", link:`${base_url}/pyq/`},
  {label: college.toUpperCase(), link: `${base_url}/pyq/${college}/`},
  {label: course.toUpperCase().replaceAll("_"," "), link:`${base_url}/pyq/${college}/${course}`},
  {label: semester, link: `${base_url}/pyq/${college}/${course}/${semester}/` }
]

---
<ExplorerLayout label="Subjects" breadcrumb_items={breadcrumb_items} >
  <FilesLister items={subjects} />
</ExplorerLayout>
