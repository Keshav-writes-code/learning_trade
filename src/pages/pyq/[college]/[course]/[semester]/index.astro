---
import type { GetStaticPaths } from "astro";
import FilesLister from "@/components/files_lister.astro"
import { db } from "astro:db";
import { PYQs } from "astro:db";
import { and } from "astro:db";
import { eq } from "astro:db";
import type { ExplorerItem } from "@/types";
import ExplorerLayout from "@/layouts/ExplorerLayout.astro";
import { toOrdinal } from "@/lib/text_manipulation/number_manipulation";
import { Exam_type } from "astro:db";

export const getStaticPaths = (async () => {
  const res = await db.selectDistinct({college_name: PYQs.college_short_name ,couse_name: PYQs.course_name, semester: PYQs.semester}).from(PYQs)
  
  return res.map(item=> ({ params: { college: item.college_name, course: item.couse_name.replaceAll(" ", "_"), semester: item.semester } }) );
}) satisfies GetStaticPaths;


const {college, course, semester } = Astro.params

const res = await db.selectDistinct({
  exam_type: Exam_type.name
}).from(PYQs).where(and(
    eq(PYQs.college_short_name, college),
    eq(PYQs.course_name, course.replaceAll("_", " ")),
    eq(PYQs.semester, semester)
  )).innerJoin(Exam_type,eq(PYQs.exam_type_id,Exam_type.id))

const base_url = import.meta.env.BASE_URL

const exams_sorted = res.sort((a,b)=>a.exam_type.localeCompare(b.exam_type))
const exams_types: ExplorerItem[] = exams_sorted.map(item => ({
  label: item.exam_type,
  link: `${base_url}/pyq/${college}/${course}/${semester}/${item.exam_type.replaceAll(" ","_")}`,
  type: "folder"
})) 

const breadcrumb_items = [
  {label: "Home", link: `${base_url}/`},
  {label: "PYQ", link:`${base_url}/pyq/`},
  {label: college.toUpperCase(), link: `${base_url}/pyq/${college}/`},
  {label: course.toUpperCase().replaceAll("_"," "), link:`${base_url}/pyq/${college}/${course}`},
  {label: toOrdinal(semester), link: `${base_url}/pyq/${college}/${course}/${semester}/` }
]

const page_metadata = {
  title: "Select the Exam Type",
  description: `Select your exam type (Finals, Sessional 1, Sessional 2) to find previous year question papers (PYQ) by subject. Preview PDFs online and download instantly for free. College : "${college}", Course : "${course}", Semester : "${semester}"`,
  open_graph: {
    title: "Select the Exam Type",
    type: "website",
    image: "pyq_pages_opengraph_image.jpg",
  },
} as const;
---
<ExplorerLayout page_metadata={page_metadata} label="Exam Type" breadcrumb_items={breadcrumb_items} >
  <FilesLister items={exams_types} />
</ExplorerLayout>
