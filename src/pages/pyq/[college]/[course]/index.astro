---
import type { GetStaticPaths } from "astro";
import { db } from "astro:db";
import { PYQs } from "astro:db";
import { eq } from "astro:db";
import type { ExplorerItem } from "@/types";
import FilesLister from "@/components/files_lister.astro";
import { and } from "astro:db";
import ExplorerLayout from "@/layouts/ExplorerLayout.astro";
import { toOrdinal } from "@/lib/text_manipulation/number_manipulation";

export const getStaticPaths = (async() => {
  const res = await db.selectDistinct({couse_name: PYQs.course_name, college: PYQs.college_short_name}).from(PYQs)
  
  return res.map(item=>({params: {college: item.college, course: item.couse_name.replaceAll(" ", "_") }}));
}) satisfies GetStaticPaths;

const { college, course} = Astro.params
const res = await db.selectDistinct({number: PYQs.semester}).from(PYQs).where( and( eq(PYQs.course_name, course.replaceAll("_"," ")), eq( PYQs.college_short_name, college ) ))

const base_url = import.meta.env.BASE_URL

const semesters_sorted = res.sort((a,b)=>a.number - b.number)
const semesters: ExplorerItem[] = semesters_sorted.map(semester =>({
  label: toOrdinal(semester.number),
  link: `${base_url}/pyq/${college}/${course}/${semester.number}`,
  type: "folder"
}))

const breadcrumb_items = [
  {label: "Home", link: `${base_url}/`},
  {label: "PYQ", link:`${base_url}/pyq/`},
  {label: college.toUpperCase(), link: `${base_url}/pyq/${college}/`},
  {label: course.toUpperCase().replaceAll("_"," "), link:`${base_url}/pyq/${college}/${course}`}
]

const page_metadata = {
  title: "Select the Semester",
  description: `Select your semester to find previous year question papers (PYQ) by subject. Preview PDFs online and download instantly for free. ${college}, ${course}`,
  open_graph: {
    title: "Select the Semester",
    type: "website" ,
    image: "pyq_pages_opengraph_image.jpg" ,
  }
} as const
---
<ExplorerLayout page_metadata={page_metadata} label="Semesters" breadcrumb_items={breadcrumb_items}>
  <FilesLister items={semesters} />
</ExplorerLayout>

