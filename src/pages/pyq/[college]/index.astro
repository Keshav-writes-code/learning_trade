---
import FilesLister from "@/components/files_lister.astro";
import type { GetStaticPaths } from "astro";
import { eq } from "astro:db";
import { db, PYQs } from "astro:db";
import type { ExplorerItem } from "@/types";
import ExplorerLayout from "@/layouts/ExplorerLayout.astro";
export const getStaticPaths =  (async () => {

  const collegesT = await db.selectDistinct({short_name: PYQs.college_short_name}).from(PYQs).orderBy(PYQs.college_short_name)
  return collegesT.map(college => ({params : {college: college.short_name} }))
}) satisfies GetStaticPaths;

const {college} = Astro.params

const res = await  db.selectDistinct({name: PYQs.course_name}).from(PYQs).where(eq( PYQs.college_short_name, college))

const base_url = import.meta.env.BASE_URL
const courses_sorted = res.sort((a,b)=>a.name.localeCompare(b.name))
const courses: ExplorerItem[] = courses_sorted.map(course =>({
  label: course.name, 
  link: `${base_url}/pyq/${college}/${course.name.replaceAll(" ","_")}`,
  type: "folder"
}))

const breadcrumb_items = [
  {label: "Home", link: `${base_url}`},
  {label: "PYQ", link:`${base_url}/pyq`},
  {label: college.toUpperCase(), link: `${base_url}/pyq/${college}`}
]
---
<ExplorerLayout label="Courses" breadcrumb_items={breadcrumb_items}  >  
  <FilesLister items={courses} />
</ExplorerLayout>

